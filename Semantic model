隐语义模型 (分解，组合）
   从数据出发，进行个性化推荐
   用户和物品之间有着隐含的练习
   隐含因子让计算机能理解就好
   将用户和物品通过中介隐含因子联系起来
   
负样本选择
    对每个用户，要保证征服样本的平衡
    选取那些很热门，而用户却没有行为的物品
    对于用户--物品集k{(u,i)}  其中入如果（u，i）是正样本，则有rui=1，负样本则rui=0
    
 参数选择
     隐特征的个数F，通常F=100
     学习速率alpha ，别太大
     正则化参数lambda，别太大
     负样本/正样本比例ratio
     
协同过滤VS隐语义
原理：协同过滤基于统计，隐语义基于建模
空间复杂度，隐语义模型较小
实施时推荐依旧难，目前离线计算多
隐语义模型咋解释呢？ 不解释

1、利用隐语义模型主要解决了以下问题

    分类的可靠性。分类来自对用户行为的统计，代表了用户对物品分类的看法。

    可控制分类的粒度。允许我们自己指定有多少个隐类。
    将一个物品多类化。通过统计用户行为来决定某物品在每个类中的权重。

2、隐语义模型在实际应用的缺点

    数据稀疏会导致性能降低。甚至不如UserCF和 ItemCF的性能。

    不能在线实时推荐。因为LFM在生成推荐列表时速度太慢。
    不能给出推荐解释。因为LFM计算的是各个隐类，但每个类别不会自动生成这个类的类别标签。
